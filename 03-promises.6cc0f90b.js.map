{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,uBAC1CE,QAAQC,IAAIF,GAEZ,MAAMG,EAAYL,SAASC,cAAc,sBACzCE,QAAQC,IAAIC,GAEZ,MAAMC,EAASN,SAASC,cAAc,wBAGtC,SAASM,EAAiBC,GACxBA,EAAUC,iBAAiB,SAASC,IAClCP,QAAQC,WAAYM,EAAIC,cAAcC,OACtCC,OAAOH,EAAIC,cAAcC,OACzBT,QAAQC,WAAYS,OAAOH,EAAIC,cAAcC,QAEtCT,QAAQC,IAAIS,OAAOH,EAAIC,cAAcC,U,CARhDT,QAAQC,IAAIE,GAaZC,EAAiBD,GAcjBP,EAAKU,iBAAiB,UAEtB,SAAoBK,GAClBA,EAAMC,iBAER,MAAMC,EAAQT,EAAiBD,GAC3B,IAAKW,EAAI,EAAGA,EAAID,EAAOC,IACrBC,MAAMF,GACNb,QAAQC,IAAI,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\")\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]')\nconsole.log(firstDelay)\n\nconst delayStep = document.querySelector('input[name=\"step\"]')\nconsole.log(delayStep)\n\nconst amount = document.querySelector('input[name=\"amount\"]')\nconsole.log(amount)\n\nfunction addEventListener(someConst) {\n  someConst.addEventListener(\"input\", evt => {\n    console.log(typeof (evt.currentTarget.value))\n    Number(evt.currentTarget.value)\n    console.log(typeof (Number(evt.currentTarget.value)))\n\n    return console.log(Number(evt.currentTarget.value))\n  });\n\n}\n\naddEventListener(amount)\n\n// for (let i = 0; i <= addEventListener(firstDelay); i += 1) {\n1//   console.log(i)\n//   function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n// }\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\nconst count = addEventListener(amount);\n    for (i = 0; i < count; i++) { \n      alert(count);\n      console.log(\"wow\")\n}\n\n  \n    function createPromise(position, delay) {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n      } else {\n        // Reject\n      }\n    }\n  \n}\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","console","log","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$addEventListener","someConst","addEventListener","evt","currentTarget","value","Number","event","preventDefault","count","i","alert"],"version":3,"file":"03-promises.6cc0f90b.js.map"}